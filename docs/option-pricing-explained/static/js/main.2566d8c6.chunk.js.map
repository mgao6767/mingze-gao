{"version":3,"sources":["reducers/index.jsx","actions/index.jsx","components/calculateOptionValue.js","components/CtrlForm.jsx","components/Formula.jsx","App.js","serviceWorker.js","index.js"],"names":["reducerMaker","name","initialState","state","action","type","toUpperCase","payload","allReducers","combineReducers","spotPrice","strikePrice","interestRate","compoundingFreq","volatility","timeToMaturity","timeToMaturityFreq","optionType","optionValue","data","normalcdf","mean","standardDeviation","x","erf","Math","SQRT2","calcualteD1andD2","calculateRateContinuousAndTimeToMaturity","continuouslyRate","T","volatilityRate","d1","log","sqrt","d2","pow","Option","Select","OptionPicker","dispatch","useDispatch","useSelector","Group","defaultValue","buttonStyle","value","onChange","e","updateState","target","Button","SpotPricePicker","justify","gutter","min","step","formatter","parser","replace","parseFloat","validatePrice","span","max","tipFormatter","StrikePricePicker","VolatilityPicker","validate","TimeToMaturityPicker","style","width","InterestRatePicker","className","useEffect","exp","calculateOptionValue","labelCol","wrapperCol","layout","minWidth","Item","label","help","toFixed","helpMessage","BSFormula","t","Tex","String","raw","fullTex","block","math","ReactGA","initialize","pageview","window","location","pathname","search","Header","Layout","Footer","Content","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","OptionValue","string","prefix","precision","title","charAt","slice","round","Boolean","hostname","match","ReactDOM","render","currentYear","Date","getFullYear","height","color","maxWidth","margin","background","padding","xs","sm","md","lg","marginTop","bordered","minHeight","CtrlForm","orientation","textAlign","href","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2566d8c6.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\n\nconst reducerMaker = (name, initialState) => {\n    return (state = initialState, action) => {\n        switch (action.type) {\n            case \"UPDATE_STATE_\" + name.toUpperCase():\n                return action.payload;\n            default:\n                return state;\n        }\n    }\n}\n\nexport const allReducers = combineReducers({\n    spotPrice: reducerMaker('spotPrice', 50),\n    strikePrice: reducerMaker('strikePrice', 50),\n    interestRate: reducerMaker('interestRate', 10),\n    compoundingFreq: reducerMaker('compoundingFreq', 'continuously'),\n    volatility: reducerMaker('volatility', 20),\n    timeToMaturity: reducerMaker('timeToMaturity', 1.5),\n    timeToMaturityFreq: reducerMaker('timeToMaturityFreq', 'months'),\n    optionType: reducerMaker('optionType', 'call'),\n    optionValue: reducerMaker('optionValue', null)\n})","export default (state, data) => {\n    return {\n        type: \"UPDATE_STATE_\" + state.toUpperCase(),\n        payload: data\n    }\n} ","import { erf } from \"mathjs\";\r\n\r\n// export function normalcdf(mean, sigma, to) {\r\n//   var z = (to - mean) / Math.sqrt(2 * sigma * sigma);\r\n//   var t = 1 / (1 + 0.3275911 * Math.abs(z));\r\n//   var a1 = 0.254829592;\r\n//   var a2 = -0.284496736;\r\n//   var a3 = 1.421413741;\r\n//   var a4 = -1.453152027;\r\n//   var a5 = 1.061405429;\r\n//   var erf =\r\n//     1 - ((((a5 * t + a4) * t + a3) * t + a2) * t + a1) * t * Math.exp(-z * z);\r\n//   var sign = 1;\r\n//   if (z < 0) {\r\n//     sign = -1;\r\n//   }\r\n//   return (1 / 2) * (1 + sign * erf);\r\n// }\r\n\r\nexport function normalcdf(mean, standardDeviation, x) {\r\n  return (1 - erf((mean - x) / (Math.SQRT2 * standardDeviation))) / 2;\r\n}\r\n\r\nexport function calcualteD1andD2(data) {\r\n  const { continuouslyRate, T } = calculateRateContinuousAndTimeToMaturity(\r\n    data\r\n  );\r\n  const { spotPrice, strikePrice, volatility /* percentage rate */ } = data;\r\n  const volatilityRate = volatility / 100;\r\n  const d1 =\r\n    (Math.log(spotPrice / strikePrice) +\r\n      (continuouslyRate + (volatilityRate * volatilityRate) / 2) * T) /\r\n    (Math.sqrt(T) * volatilityRate);\r\n  const d2 = d1 - volatilityRate * Math.sqrt(T);\r\n  return { d1, d2 };\r\n}\r\n\r\nexport function calculateRateContinuousAndTimeToMaturity(data) {\r\n  const {\r\n    interestRate /* percentage rate */,\r\n    compoundingFreq,\r\n    timeToMaturity,\r\n    timeToMaturityFreq\r\n  } = data;\r\n  let T = 0;\r\n  let continuouslyRate = 0;\r\n  switch (compoundingFreq) {\r\n    case \"annually\":\r\n      continuouslyRate = Math.log(interestRate / 100 + 1);\r\n      break;\r\n    case \"monthly\":\r\n      continuouslyRate = Math.log(Math.pow(interestRate / 12 / 100 + 1, 12));\r\n      break;\r\n    case \"weekly\":\r\n      continuouslyRate = Math.log(Math.pow(interestRate / 52 / 100 + 1, 52));\r\n      break;\r\n    case \"daily\":\r\n      continuouslyRate = Math.log(Math.pow(interestRate / 365 / 100 + 1, 365));\r\n      break;\r\n    default:\r\n      continuouslyRate = interestRate / 100;\r\n  }\r\n  switch (timeToMaturityFreq) {\r\n    case \"years\":\r\n      T = timeToMaturity;\r\n      break;\r\n    case \"months\":\r\n      T = timeToMaturity / 12;\r\n      break;\r\n    case \"weeks\":\r\n      T = timeToMaturity / 52;\r\n      break;\r\n    case \"days\":\r\n      T = timeToMaturity / 365;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return { continuouslyRate, T };\r\n}\r\n\r\nexport function calculateOptionValue(data) {\r\n  const { d1, d2 } = calcualteD1andD2(data);\r\n  const { continuouslyRate, T } = calculateRateContinuousAndTimeToMaturity(\r\n    data\r\n  );\r\n  const { spotPrice, strikePrice, optionType } = data;\r\n  let value = 0;\r\n\r\n  if (optionType === \"call\")\r\n    value =\r\n      normalcdf(0, 1, d1) * spotPrice -\r\n      normalcdf(0, 1, d2) * strikePrice * Math.exp(-continuouslyRate * T);\r\n  else {\r\n    value =\r\n      strikePrice * Math.exp(-continuouslyRate * T) * normalcdf(0, 1, -d2) -\r\n      spotPrice * normalcdf(0, 1, -d1);\r\n  }\r\n  return value;\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, InputNumber, Row, Col, Slider, Radio, Select } from \"antd\";\nimport updateState from \"../actions\";\nimport { calculateOptionValue } from \"./calculateOptionValue\";\n\nconst { Option } = Select;\n\nfunction OptionPicker() {\n  const dispatch = useDispatch();\n  const optionType = useSelector(state => state.optionType);\n  return (\n    <Radio.Group\n      defaultValue={optionType}\n      buttonStyle=\"solid\"\n      value={optionType}\n      onChange={e => dispatch(updateState(\"optionType\", e.target.value))}\n    >\n      <Radio.Button value=\"call\">Call</Radio.Button>\n      <Radio.Button value=\"put\">Put</Radio.Button>\n    </Radio.Group>\n  );\n}\n\nfunction SpotPricePicker() {\n  const dispatch = useDispatch();\n  const spotPrice = useSelector(state => state.spotPrice);\n  const validatePrice = value => {\n    return typeof value === \"number\" ? parseFloat(value) : spotPrice;\n  };\n  return (\n    <Row type=\"flex\" justify=\"start\" gutter={8}>\n      <Col>\n        <InputNumber\n          min={0.01}\n          step={0.01}\n          value={spotPrice}\n          formatter={value => `$${value}`}\n          parser={value => value.replace(\"$\", \"\")}\n          onChange={value =>\n            dispatch(updateState(\"spotPrice\", validatePrice(value)))\n          }\n        />\n      </Col>\n      <Col span={8}>\n        <Slider\n          min={0.01}\n          max={100}\n          step={0.01}\n          onChange={value => dispatch(updateState(\"spotPrice\", value))}\n          value={spotPrice}\n          tipFormatter={value => `$${value}`}\n        />\n      </Col>\n    </Row>\n  );\n}\n\nfunction StrikePricePicker() {\n  const dispatch = useDispatch();\n  const strikePrice = useSelector(state => state.strikePrice);\n  const validatePrice = value => {\n    return typeof value === \"number\" ? parseFloat(value) : strikePrice;\n  };\n  return (\n    <Row type=\"flex\" justify=\"start\" gutter={8}>\n      <Col>\n        <InputNumber\n          min={0.01}\n          step={0.01}\n          value={strikePrice}\n          formatter={value => `$${value}`}\n          parser={value => value.replace(\"$\", \"\")}\n          onChange={value =>\n            dispatch(updateState(\"strikePrice\", validatePrice(value)))\n          }\n        />\n      </Col>\n      <Col span={8}>\n        <Slider\n          min={0.01}\n          max={100}\n          step={0.01}\n          onChange={value => dispatch(updateState(\"strikePrice\", value))}\n          value={strikePrice}\n          tipFormatter={value => `$${value}`}\n        />\n      </Col>\n    </Row>\n  );\n}\n\nfunction VolatilityPicker() {\n  const dispatch = useDispatch();\n  const volatility = useSelector(state => state.volatility);\n  const validate = value => {\n    return typeof value === \"number\" ? parseFloat(value) : volatility;\n  };\n  return (\n    <Row type=\"flex\" justify=\"start\" gutter={8}>\n      <Col>\n        <InputNumber\n          min={0.01}\n          step={0.01}\n          value={volatility}\n          formatter={value => `${value}%`}\n          parser={value => value.replace(\"%\", \"\")}\n          onChange={value =>\n            dispatch(updateState(\"volatility\", validate(value)))\n          }\n        />\n      </Col>\n      <Col span={8}>\n        <Slider\n          min={0.01}\n          max={100}\n          step={0.01}\n          onChange={value =>\n            dispatch(updateState(\"volatility\", parseFloat(value)))\n          }\n          value={volatility}\n          tipFormatter={value => `${value}%`}\n        />\n      </Col>\n    </Row>\n  );\n}\n\nfunction TimeToMaturityPicker() {\n  const dispatch = useDispatch();\n  const timeToMaturity = useSelector(state => state.timeToMaturity);\n  const timeToMaturityFreq = useSelector(state => state.timeToMaturityFreq);\n  const validate = value => {\n    return typeof value === \"number\" ? parseFloat(value) : timeToMaturity;\n  };\n  return (\n    <Row type=\"flex\" justify=\"start\" gutter={8}>\n      <Col>\n        <InputNumber\n          min={0.01}\n          step={0.1}\n          value={timeToMaturity}\n          onChange={value =>\n            dispatch(updateState(\"timeToMaturity\", validate(value)))\n          }\n        />\n      </Col>\n      <Col span={8}>\n        {/* <span className=\"ant-form-text\"> compounded</span> */}\n        <Select\n          defaultValue={timeToMaturityFreq}\n          style={{ width: 100 }}\n          value={timeToMaturityFreq}\n          onChange={value => dispatch(updateState(\"timeToMaturityFreq\", value))}\n        >\n          <Option value=\"years\">years</Option>\n          <Option value=\"months\">months</Option>\n          <Option value=\"weeks\">weeks</Option>\n          <Option value=\"days\">days</Option>\n        </Select>\n      </Col>\n    </Row>\n  );\n}\n\nfunction InterestRatePicker() {\n  const dispatch = useDispatch();\n  const compoundingFreq = useSelector(state => state.compoundingFreq);\n  const interestRate = useSelector(state => state.interestRate);\n  const validate = value => {\n    return typeof value === \"number\" ? parseFloat(value) : interestRate;\n  };\n  return (\n    <Row type=\"flex\" justify=\"start\" gutter={8}>\n      <Col>\n        <InputNumber\n          min={0.01}\n          step={0.01}\n          value={interestRate}\n          formatter={value => `${value}%`}\n          parser={value => value.replace(\"%\", \"\")}\n          onChange={value =>\n            dispatch(updateState(\"interestRate\", validate(value)))\n          }\n        />\n      </Col>\n      <Col>\n        <span className=\"ant-form-text\"> compounded</span>\n        <Select\n          defaultValue={compoundingFreq}\n          style={{ width: 130 }}\n          value={compoundingFreq}\n          onChange={value => dispatch(updateState(\"compoundingFreq\", value))}\n        >\n          <Option value=\"continuously\">continuously</Option>\n          <Option value=\"annually\">annually</Option>\n          <Option value=\"monthly\">monthly</Option>\n          <Option value=\"weekly\">weekly</Option>\n          <Option value=\"daily\">daily</Option>\n        </Select>\n      </Col>\n    </Row>\n  );\n}\n\nexport default () => {\n  const formItemLayout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 16 }\n  };\n  const spotPrice = useSelector(state => state.spotPrice);\n  const strikePrice = useSelector(state => state.strikePrice);\n  const interestRate = useSelector(state => state.interestRate);\n  const compoundingFreq = useSelector(state => state.compoundingFreq);\n  const timeToMaturity = useSelector(state => state.timeToMaturity);\n  const timeToMaturityFreq = useSelector(state => state.timeToMaturityFreq);\n  const volatility = useSelector(state => state.volatility);\n  const optionType = useSelector(state => state.optionType);\n  const dispatch = useDispatch();\n\n  const data = {\n    spotPrice,\n    interestRate,\n    strikePrice,\n    compoundingFreq,\n    timeToMaturity,\n    timeToMaturityFreq,\n    volatility,\n    optionType\n  };\n\n  useEffect(() => {\n    const value = calculateOptionValue(data);\n    dispatch(updateState(\"optionValue\", value));\n  }, [data, dispatch]);\n\n  const helpMessage = () => {\n    let continuouslyRate = 0;\n    switch (compoundingFreq) {\n      case \"annually\":\n        continuouslyRate = Math.log(interestRate / 100 + 1) * 100;\n        break;\n      case \"monthly\":\n        continuouslyRate =\n          Math.log(Math.pow(interestRate / 12 / 100 + 1, 12)) * 100;\n        break;\n      case \"weekly\":\n        continuouslyRate =\n          Math.log(Math.pow(interestRate / 52 / 100 + 1, 52)) * 100;\n        break;\n      case \"daily\":\n        continuouslyRate =\n          Math.log(Math.pow(interestRate / 365 / 100 + 1, 365)) * 100;\n        break;\n      default:\n        return \"\";\n    }\n    return `${interestRate.toFixed(\n      2\n    )}% p.a. compounded ${compoundingFreq} is approx. ${continuouslyRate.toFixed(\n      2\n    )}% p.a. compounded continuously`;\n  };\n  return (\n    <Form {...formItemLayout} layout=\"horizontal\" style={{ minWidth: \"100%\" }}>\n      <Form.Item label=\"Option Type\">\n        <OptionPicker></OptionPicker>\n      </Form.Item>\n      <Form.Item label=\"Spot Price\">\n        <SpotPricePicker></SpotPricePicker>\n      </Form.Item>\n      <Form.Item label=\"Strike Price\">\n        <StrikePricePicker></StrikePricePicker>\n      </Form.Item>\n      <Form.Item label=\"Volatility (p.a.)\">\n        <VolatilityPicker></VolatilityPicker>\n      </Form.Item>\n      <Form.Item label=\"Interest Rate (p.a.)\" help={helpMessage()}>\n        <InterestRatePicker></InterestRatePicker>\n      </Form.Item>\n      <Form.Item label=\"Time to Maturity\">\n        <TimeToMaturityPicker></TimeToMaturityPicker>\n      </Form.Item>\n    </Form>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"katex/dist/katex.min.css\";\nimport TeX from \"@matejmazur/react-katex\";\nimport {\n  calculateRateContinuousAndTimeToMaturity,\n  calcualteD1andD2,\n  normalcdf\n} from \"./calculateOptionValue\";\n\nexport default function BSFormula() {\n  const spotPrice = useSelector(state => state.spotPrice);\n  const strikePrice = useSelector(state => state.strikePrice);\n  const interestRate = useSelector(state => state.interestRate);\n  const compoundingFreq = useSelector(state => state.compoundingFreq);\n  const timeToMaturity = useSelector(state => state.timeToMaturity);\n  const timeToMaturityFreq = useSelector(state => state.timeToMaturityFreq);\n  const volatility = useSelector(state => state.volatility);\n  const optionType = useSelector(state => state.optionType);\n  const optionValue = useSelector(state => state.optionValue);\n\n  const data = {\n    spotPrice,\n    interestRate,\n    strikePrice,\n    compoundingFreq,\n    timeToMaturity,\n    timeToMaturityFreq,\n    volatility,\n    optionType\n  };\n  const { continuouslyRate, T } = calculateRateContinuousAndTimeToMaturity(\n    data\n  );\n  const { d1, d2 } = calcualteD1andD2(data);\n  const t = T.toFixed(4);\n  const Tex = String.raw`\\begin{aligned}d_1 &= \\frac{\\ln(\\frac{S}{X}) + (r + \\frac{\\sigma^2}{2})T }{\\sigma \\sqrt{T}} \\\\ &=  \\frac{\\ln(\\frac{${spotPrice}}{${strikePrice}}) + (${continuouslyRate.toFixed(\n    4\n  )}+\\frac{${(volatility / 100).toFixed(4)}^2}{2})\\times ${t} }{${(\n    volatility / 100\n  ).toFixed(4)} \\sqrt{${t}}} =${d1.toFixed(\n    4\n  )} \\\\ d_2 &= d_1 - \\sigma \\sqrt{T} = ${d2.toFixed(4)} \\\\ \\\\`;\n\n  let fullTex = \"\";\n  if (optionType === \"call\") {\n    fullTex =\n      Tex +\n      String.raw`N(d_1) &= ${normalcdf(0, 1, d1).toFixed(5)} \\\\\n      N(d_2) &= ${normalcdf(0, 1, d2).toFixed(5)} \\\\ \\\\\n      c &= SN(d_1) - X e^{-rT} N(d_2) \\\\& = ${\n        optionValue ? optionValue.toFixed(4) : 0\n      }  \\end{aligned}`;\n  } else {\n    fullTex =\n      Tex +\n      String.raw`N(-d_1) &= ${normalcdf(0, 1, -d1).toFixed(5)} \\\\\n      N(-d_2) &= ${normalcdf(0, 1, -d2).toFixed(5)} \\\\\n      \\\\\n      p &=Xe^{-rT} N(-d_2) - SN(-d_1) \\\\& = ${\n        optionValue ? optionValue.toFixed(4) : 0\n      }  \\end{aligned}`;\n  }\n  return (\n    <div>\n      <p>This value is computed using Black-Scholes model as below:</p>\n\n      <TeX block>{fullTex}</TeX>\n      <p>\n        <TeX math=\"r\" />: the continuously compounded interest rate per annum.\n      </p>\n      <p>\n        <TeX math=\"S\" />: the spot price of the stock.\n      </p>\n      <p>\n        <TeX math=\"X\" />: the exercise price of the option.\n      </p>\n      <p>\n        <TeX math=\"\\sigma\" />: the volatility per annum.\n      </p>\n      <p>\n        <TeX math=\"T\" />: the time to maturity.\n      </p>\n      <p>\n        <TeX math=\"N(\\cdot)\" />: the cumulative standard normal distribution\n        function.\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider, useSelector } from \"react-redux\";\nimport { allReducers } from \"./reducers\";\nimport { Layout, Statistic, Row, Col, Card, Divider } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport CtrlForm from \"./components/CtrlForm\";\nimport Formula from \"./components/Formula\";\nimport ReactGA from \"react-ga\";\nReactGA.initialize(\"UA-114057186-1\");\nReactGA.pageview(window.location.pathname + window.location.search);\n\nconst { Header, Footer, Content } = Layout;\n\nconst store = createStore(\n  allReducers /* preloadedState, */,\n  +window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction OptionValue() {\n  const optionValue = useSelector(state => state.optionValue);\n  const optionType = useSelector(state => state.optionType);\n  return (\n    <Statistic\n      prefix=\"$\"\n      precision={2}\n      title={`${capitalize(optionType)} Option Value`}\n      value={(Math.round(parseFloat(optionValue) * 100) / 100).toFixed(4)}\n    ></Statistic>\n  );\n}\n\nexport default function App() {\n  const currentYear = new Date().getFullYear();\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Layout style={{ height: \"100vh\" }}>\n          <Header>\n            <h1 style={{ color: \"white\" }}>Option Pricing Explained</h1>\n          </Header>\n          <Content\n            style={{ width: \"100%\", maxWidth: \"100em\", margin: \"0px auto\" }}\n          >\n            <div\n              style={{\n                background: \"#ECECEC\",\n                padding: 24,\n                minWidth: \"80%\"\n              }}\n            >\n              <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                <Col\n                  lg={{ span: 12 }}\n                  md={{ span: 24 }}\n                  sm={{ span: 24 }}\n                  style={{ marginTop: \"10px\" }}\n                >\n                  <Card\n                    bordered={false}\n                    style={{ minHeight: \"50vh\" }}\n                    title=\"Parameters\"\n                  >\n                    <CtrlForm></CtrlForm>\n                    <Divider orientation=\"right\">\n                      <OptionValue></OptionValue>\n                    </Divider>\n                  </Card>\n                </Col>\n                <Col\n                  lg={{ span: 12 }}\n                  md={{ span: 24 }}\n                  sm={{ span: 24 }}\n                  style={{ marginTop: \"10px\" }}\n                >\n                  <Card bordered={false} style={{ minHeight: \"50vh\" }}>\n                    <Divider orientation=\"left\">\n                      <OptionValue></OptionValue>\n                    </Divider>\n\n                    <Formula></Formula>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </Content>\n          <Footer style={{ textAlign: \"center\" }}>\n            Option Pricing Explained ©{currentYear} Created by{\" \"}\n            <a href=\"https://mingze-gao.com\">Mingze Gao</a>\n          </Footer>\n        </Layout>\n      </div>\n    </Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}